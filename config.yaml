# Application Configuration
app:
  name: "Telegram Bot API"
  version: "1.0.0"
  environment: "development" # development, production, test
  debug: true

# Server Configuration
server:
  host: "localhost"
  port: 8080
  read_timeout: "30s"
  write_timeout: "30s"
  idle_timeout: "120s"

# Database Configuration
database:
  host: "localhost"
  port: 5432
  user: "auth_user"
  password: "auth123"
  name: "telegram_bot"
  ssl_mode: "disable"
  max_open_conns: 25
  max_idle_conns: 5
  conn_max_lifetime: "5m"

# JWT Configuration
jwt:
  secret: "your-super-secret-jwt-key-here-change-this-in-production"
  expiry: "24h"
  refresh_expiry: "168h" # 7 days

# Google Places API Configuration
google:
  places_api_key: "your-google-places-api-key-here"
  # Note: Google Places API has a free tier with $200 credit per month
  # For testing purposes, this should be sufficient
  # Free tier includes: 1000 requests per day for most APIs
  timeout: "30s"

# Telegram Bot Configuration
telegram:
  bot_token: "7899357746:AAHsstTcm369_BC9zZmAAif48uVnLCjhwUA"
  webhook_url: "" # Leave empty for development, set for production
  timeout: "30s"

# Redis Configuration (optional - for caching)
redis:
  host: "localhost"
  port: 6379
  password: ""
  db: 0
  pool_size: 10
  min_idle_conns: 5

# Logging Configuration
logging:
  level: "info" # debug, info, warn, error
  format: "json" # json, text
  output: "stdout" # stdout, file
  file_path: "logs/app.log"
  max_size: 100 # MB
  max_backups: 3
  max_age: 28 # days
  compress: true

# Rate Limiting
rate_limit:
  enabled: true
  requests_per_minute: 60
  burst: 10

# CORS Configuration
cors:
  allowed_origins:
    - "http://localhost:3000"
    - "http://localhost:8080"
  allowed_methods:
    - "GET"
    - "POST"
    - "PUT"
    - "DELETE"
    - "OPTIONS"
  allowed_headers:
    - "Origin"
    - "Content-Type"
    - "Accept"
    - "Authorization"
    - "X-Request-ID"
  expose_headers:
    - "X-Request-ID"
  allow_credentials: true
  max_age: 86400